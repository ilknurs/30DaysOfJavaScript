// // Exercises: Level 1
// // Create an empty object called dog
// // Print the the dog object on the console
// // Add name, legs, color, age and bark properties for the dog object. The bark property is a method which return woof woof
// // Get name, legs, color, age and bark value from the dog object
// // Set new properties the dog object: breed, getDogInfo

// const dog = {
//     dogName : 'Buck',
//     legs : 4,
//     color : 'brown',
//     age : 5,
    

//     bark : function() {
//         return 'woof woof'
//     }
// }


// dog.getDogInfo = function(){

//     let breed = 'golden'
// }

// console.log(dog.dogName)
// console.log(dog.legs)
// console.log(dog.bark())

// console.log(dog)


// //Level 2
// //Find the person who has many skills in the users object.

// const users = {
//     Alex: {
//       email: 'alex@alex.com',
//       skills: ['HTML', 'CSS', 'JavaScript'],
//       age: 20,
//       isLoggedIn: false,
//       points: 30
//     },
//     Asab: {
//       email: 'asab@asab.com',
//       skills: ['HTML', 'CSS', 'JavaScript', 'Redux', 'MongoDB', 'Express', 'React', 'Node'],
//       age: 25,
//       isLoggedIn: false,
//       points: 50
//     },
//     Brook: {
//       email: 'daniel@daniel.com',
//       skills: ['HTML', 'CSS', 'JavaScript', 'React', 'Redux'],
//       age: 30,
//       isLoggedIn: true,
//       points: 50
//     },
//     Daniel: {
//       email: 'daniel@alex.com',
//       skills: ['HTML', 'CSS', 'JavaScript', 'Python'],
//       age: 20,
//       isLoggedIn: false,
//       points: 40
//     },
//     John: {
//       email: 'john@john.com',
//       skills: ['HTML', 'CSS', 'JavaScript', 'React', 'Redux', 'Node.js'],
//       age: 20,
//       isLoggedIn: true,
//       points: 50
//     },
//     Thomas: {
//       email: 'thomas@thomas.com',
//       skills: ['HTML', 'CSS', 'JavaScript', 'React'],
//       age: 20,
//       isLoggedIn: false,
//       points: 40
//     },
//     Paul: {
//       email: 'paul@paul.com',
//       skills: ['HTML', 'CSS', 'JavaScript', 'MongoDB', 'Express', 'React', 'Node'],
//       age: 20,
//       isLoggedIn: false,
//       points: 40
//     }
//   }


// let winner
// let max = 0

// for(const property in users)  {
//     if(users[property].skills.length > max){
//         max = users[property].skills.length
//         winner = property
//     }
// }

// console.log(winner)
// //Set your name in the users object without modifying the original users object

// const keys = Object.keys(users)
// console.log(keys)

// const values = Object.values(users)
// console.log(values)

//Level 3
//Create an object literal called personAccount. It has firstName, lastName, incomes, 
//expenses properties and it has totalIncome, totalExpense, accountInfo,addIncome, addExpense and accountBalance methods. Incomes is a set of incomes and 
//its description and expenses is a set of incomes and its description.

const personAccount = {
    firstName : '',
    lastName : '',
    income : '',
    expenses : '',

    totalIncome : function (){
        let tIncome  = 0
        let values = Object.values(this.income)
        for(let i=0; i< values.length; i++){
            tIncome += values[i]
        }
        return tIncome
    },

    totalExpenses : function(){
        let tExpences = 0
        let values = Object.values(this.expenses)
        for (let i = 0; i < values.length; i++) {
            tExpenses += values[i]
        }
        return tExpenses
    },

    accountBalance : function () {
        return this.totalIncome() - this.totalExpenses()
    },

    accountInfo : function (){
        return `name:${this.firstName} ${this.lastName}\n
        incomes:${Object.entries(this.income)}
        expenses: ${Object.entries(this.expenses)}
        totalIncome: ${this.totalIncome()}
        totalExpenses: ${this.totalExpenses()}
        accountBalance: ${this.accountBalance()}`
    }
}
function callBack(add, a, b){
    return add(a, b)
}